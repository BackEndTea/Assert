# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - "**"

name: "Continuous Integration"

jobs:
  coding-standards:
    name: "Coding Standards"

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - 7.4

    steps:
      - name: "Checkout"
        uses: actions/checkout@v1.1.0

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@master
        with:
          coverage: none
          extension-csv: "mbstring"
          php-version: ${{ matrix.php-version }}

      - name: "Validate composer.json"
        run: $(which composer) validate

      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v1.0.2
        with:
          path: ~/.composer/cache
          key: php${{ matrix.php-version }}-composer-locked-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            php${{ matrix.php-version }}-composer-locked-

      - name: "Install locked dependencies with composer"
        run: $(which composer) install --no-interaction --no-progress --no-suggest

      - name: "Cache cache directory for friendsofphp/php-cs-fixer"
        uses: actions/cache@v1.0.2
        with:
          path: ~/.build/php-cs-fixer
          key: php${{ matrix.php-version }}-php-cs-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            php${{ matrix.php-version }}-php-cs-

      - name: "Run PHP CS"
        run: vendor/bin/phpcs

  static-code-analysis:
    name: "Static Code Analysis"

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - 7.4

    steps:
      - name: "Checkout"
        uses: actions/checkout@v1.1.0

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@master
        with:
          coverage: none
          extension-csv: "mbstring"
          php-version: ${{ matrix.php-version }}

      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v1.0.2
        with:
          path: ~/.composer/cache
          key: ${{ matrix.php-version }}-composer-locked-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ matrix.php-version }}-composer-locked-

      - name: "Install locked dependencies with composer"
        run: $(which composer) install --no-interaction --no-progress --no-suggest

      - name: "Run phpstan/phpstan & vimeo/psalm"
        run: vendor/bin/phpstan analyse && vendor/bin/psalm

  tests:
    name: "Tests"

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - 7.3
          - 7.4
        dependencies:
          - locked

    steps:
      - name: "Checkout"
        uses: actions/checkout@v1.1.0

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@master
        with:
          coverage: none
          extension-csv: "mbstring"
          php-version: ${{ matrix.php-version }}

      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v1.0.2
        with:
          path: ~/.composer/cache
          key: php${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            php${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-


      - name: "Install locked dependencies with composer"
        if: matrix.dependencies == 'locked'
        run: $(which composer) install --no-interaction --no-progress --no-suggest

      - name: "Run tests with phpunit/phpunit"
        run: vendor/bin/phpunit
